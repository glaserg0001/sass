/*==SassScript start==*/

/*variables start*/
$size: 100px;
$color-gray: #d3d3d3;

.rectangle {
	width: $size * 2;
	height: $size;
	border: 2px solid $color_gray;

	$font-size-global: 20px !global;
	font-size: $font-size-global;
}

.square {
	width: $size;
	height: $size;
	border: 2px solid 1.2*$color_gray;
	font-size: $font_size_global;
}
/*variables end*/

/*lists start*/
.lists {
	$list1: 100px 200px;
	$list2: 300px 400px;
	// get access items in a list
	padding: nth(10px 20px 30px, 1);
	font: {
		family: nth((Helvetica, Arial, sans-serif), 3);
	}
	// join function can join multiple lists together
	margin: join($list1, $list2);
	margin: join((50px, 60px), (70px, 80px));
	// append function can add items to lists

	padding: append($list1, $list2);
	padding: append((11px, 12px), 14px);
	padding: append(10px 20px, 30px);
}
/*lists end*/

/*maps start*/
$status-colors: (

	primary: #000,
	success: #27BA6C,
	info: #03a9f4,
	warning: #FF8833,
	danger: #ff1a1a
	);

.message {

	@each $status, $color in $status-colors { 

		&-#{$status} {

			background: $color;
		}
	}
}
/*maps end*/

.numbers {
	width: 10px + 10px;
	height: 10px * 1.5;
	// division
	$width: 1000px;
	$font-size: 12px;
	$line-height: 1.2;
	font: 14px/1.4;
	width: $width / 2;
	width: round(7.5px) / 2;
	height: (1000px / 2);
	padding: 10px + 20px / 4px;
	line-height: $font-size/$line-height * 10;
	font: #{$font-size}/#{$line-height};
	/// number functions
	/*1*/
	width: percentage(.2);
	width: percentage(24px / 16px);
	width: round(4.5)+px;
	width: ceil(6.1)+px;
	width: floor(8.9)+px;
	/*2*/
	width: abs(---10px);
	width: min(1, 2, 6, 8);
	width: max(1, 2, 6, 8);
	line-height: random() + 1;
	// a random number from 5 to 15.
	width: random(11) + 4#{px};
}

@import "colors";

/*strings start*/
.string {
	&:before {
		content: 'quotes ' + text;
		content: text + ' quotes';
		content: text + -text;
		content: "text before #{10 + 20} text after";
		/// string functions
		/*1*/
		content: unquote("text");
		content: quote(text);
		content: str-length(text);
		content: str-insert(aaaa, AA, 3);
		content: str-index(abcd, b);
		/*2*/
		content: str-slice("abcdehxz", 2, 3);
		content: str-slice("abcdehxz", 2, -2);
		content: to-upper-case('to upper case');
		content: to-lower-case('To LoWeR CaSE');
	}
}
/*strings end*/
/*boolean start*/
.boolean {
	$var1: true;
	$var2: false;
	@if $var1 and $var2 == false {
		z-index: 1;
	}
	@if $var1 or $var2 {
		z-index: 2;
	}
	@if $var1 and not $var2 {
		z-index: 3;
	}
}
/*boolean end*/

/* & symbol start */
@mixin parent {
	@if & {
		&:hover {
			color: red;
		}
	} 
	@else {
		.symbol-link {
			color: red;
		}
	}
}
.symbol {
	@include parent;
}
@include parent;
/*  & symbol end */

/*Variable defaults start*/
$test-text: Test text;
$content: "#{$test-text}";
$content: "New #{$test-text}" !default;
$new_content: "Default #{to-lower-case(#{$test-text})}" !default;
$content_null: null;
$content_null: 'not-null';

.variables-to-default {
  content: $content;
  content: $new_content;
  content: $content_null;
}
/*Variable defaults ens*/


/*==SassScript end==*/