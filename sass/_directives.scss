/* DIRECTIVES start*/

// @import
.import {
	@import "example";
}

// @media
.media {
	$media: screen;
	$feature: max-width;
	$value: 768px;

	width: 1000px;
	@media #{$media} {
		@media ($feature: $value) {
			width: 700px;
		}
	}
}

/*@extend start*/
.extend {
	padding: 10px;
	border: 1px solid #f00;
	border-radius: 5px;
	font-size: 12px;
	&.font-large {
		font-size: 16px;
	}
}
.linkhover {
	&:hover {
		text-decoration: underline;
	}
}
.extendOtherDefoult {
	color: #888;
}
.extendOther {
	@extend .extendOtherDefoult;
	line-height: 1.2;
	max-width: 500px;
}
.extendAdditional {
	@extend .extend;
	@extend .extendOther;
	@extend .linkhover:hover;
	background-color: #e4e4e4;
}
.optional {
	@extend .optional_ex !optional;
}
/*@extend end*/

/*@at-root start*/
.parent {
	width: 400px;
	@at-root .child1 {
		width: 180px;
	}
	@at-root .child2 {
		width: 220px;
	}
	.child3 {width: 100%;}
}
/*@at-root end*/
// @debug 10em + 12em;

/*@warn start*/
@mixin adjust-location($x, $y) {
	@if unitless($x) {
		@warn "The value must be in pixels";
		$x: 1px * $x;
	}
	@if unitless($y) {
		@warn "The value must be in pixels";
		$y: 1px * $y;
	}
	position: relative; left: $x; top: $y;
}
.warn {
	@include adjust-location(2px,4px);
}
/*@warn end*/

/* DIRECTIVES end*/